# MiniCRM .gitignore
# 针对Python项目和MiniCRM特定需求的Git忽略文件

# ==================== Python相关 ====================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ==================== IDE和编辑器 ====================

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ==================== 操作系统相关 ====================

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ==================== MiniCRM特定文件 ====================

# 数据库文件
*.db
*.sqlite
*.sqlite3
minicrm.db*
database/

# 配置文件 (包含敏感信息)
config/local_config.json
config/production_config.json
.env.local
.env.production

# 日志文件
logs/
*.log
*.log.*

# 备份文件
backups/
*.backup
*.bak

# 导出文件
exports/
export_*

# 模板文件 (用户自定义)
templates/custom/
user_templates/

# 缓存文件
cache/
.cache/

# 临时文件
temp/
tmp/
*.tmp

# 用户数据目录
user_data/
.minicrm/

# 文档生成的临时文件
*.docx~
*.xlsx~
*.pdf~

# ==================== 开发工具相关 ====================

# Ruff cache
.ruff_cache/

# Coverage reports
.coverage
coverage.xml
htmlcov/

# Pytest cache
.pytest_cache/

# Tox
.tox/

# Pre-commit
.pre-commit-config.yaml.bak

# ==================== 构建和部署相关 ====================

# PyInstaller build files
build/
dist/
*.spec

# Wheel files
*.whl

# Setup.py build artifacts
build/
*.egg-info/

# UV lock file (if using UV package manager)
uv.lock

# ==================== 文档相关 ====================

# Sphinx build
docs/_build/
docs/build/

# MkDocs
site/

# ==================== 其他 ====================

# 压缩文件
*.zip
*.tar.gz
*.rar
*.7z

# 图片缓存
*.png~
*.jpg~
*.jpeg~
*.gif~
*.svg~

# 字体文件 (如果不需要版本控制)
# *.ttf
# *.otf
# *.woff
# *.woff2

# 大文件标记
*.large

# 本地测试文件
test_local_*
local_test_*

# 性能测试结果
performance_results/
benchmark_results/

# 安全扫描结果
security_scan_results/

# 依赖检查结果
dependency_check_results/
